name: CI

permissions:
  contents: read

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    name: Build and Test
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: 21
          distribution: temurin
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Maven Build
        run: mvn -V -B -DskipTests=true install -DnvdApiKey=${{ secrets.NVD_API_KEY }} -Ddependency-check.skip=true
      - name: Maven Test
        run: mvn -B verify -DnvdApiKey=${{ secrets.NVD_API_KEY }} -Ddependency-check.skip=true
        env:
          AWS_REGION: eu-west-2
          AWS_ACCESS_KEY_ID: test
          AWS_SECRET_ACCESS_KEY: test
  ui-tests:
    name: Run UI tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          docker build -t ui-tests -f ui-tests/Dockerfile .
          docker run ui-tests
  cli-tests:
    name: Run CLI tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: 21
          distribution: temurin
      - run: |
          mvn clean package -DskipTests=true
          docker build -t cli-tests -f cli-tests/Dockerfile .
          docker run -v "$PWD:/code" cli-tests /code/cli-tests/test
