name: Release DROID
on:
  workflow_dispatch:
    inputs:
      to-deploy:
        description: 'Version to deploy'
        required: true
      next-version:
        description: 'Next version'
        required: true
permissions:
  contents: write
env:
  BRANCH_NAME: version-bump-${{ github.run_id }}${{ github.run_attempt }}
  AWS_REGION: eu-west-2
  AWS_ACCESS_KEY_ID: test
  AWS_SECRET_ACCESS_KEY: test
  MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
  MAVEN_CENTRAL_TOKEN: ${{ secrets.MAVEN_CENTRAL_TOKEN }}
  MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
jobs:
  maven-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Apache Maven Central
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_CENTRAL_TOKEN
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
      - run: |
          cp .github/scripts/settings.xml ~/.m2/settings.xml
          git config user.name tna-da-bot
          git config user.email "181243999+tna-da-bot@users.noreply.github.com"
          git checkout -b $BRANCH_NAME
          git push -u origin $BRANCH_NAME
      - run: mvn -q clean install -DskipTests -q -DnvdApiKey=${{ secrets.NVD_API_KEY }}
      - run: mvn -q -B release:prepare -q -DreleaseVersion=${{ github.event.inputs.to-deploy }} -DdevelopmentVersion=${{ github.event.inputs.next-version }}
      - run: mvn javadoc:javadoc
      - run: mvn -B release:perform
      - run: |
          curl -X POST "https://api.github.com/repos/digital-preservation/droid/pulls" \
                      -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                      -H "Accept: application/vnd.github+json" \
                      -d '{"title": "Version bump for ${{ github.event.inputs.to-deploy }}","head": "$BRANCH_NAME","base": "main"}'
#  github-release:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#      - uses: actions/setup-java@v4
#        with:
#          distribution: 'temurin'
#          java-version: '21'
#      - run: |
#          mvn clean package -DnvdApiKey=${{ secrets.NVD_API_KEY }}
#          pip install requests
#          python .github/scripts/generate_release.py ${{ github.event.inputs.to-deploy }}
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          AWS_REGION: eu-west-2
#          AWS_ACCESS_KEY_ID: test
#          AWS_SECRET_ACCESS_KEY: test
